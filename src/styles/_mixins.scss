@use 'sass:map';
@use 'colors' as *;
@use 'variables' as *;

// Breakpoints
$breakpoints: (
  'small': 576px,
  'medium': 768px,
  'large': 992px,
  'xlarge': 1200px,
  'xxlarge': 1920px
);

// Responsive mixins
@mixin width-at-least($breakpoint) {
  $value: map.get($breakpoints, $breakpoint);
  @if $value != null {
    @media (min-width: $value) {
      @content;
    }
  } @else {
    @warn "No value for breakpoint `#{$breakpoint}` in $breakpoints map.";
  }
}

@mixin width-less-than($breakpoint) {
  $value: map.get($breakpoints, $breakpoint);
  @if $value != null {
    @media (max-width: ($value - 1)) {
      @content;
    }
  } @else {
    @warn "No value for breakpoint `#{$breakpoint}` in $breakpoints map.";
  }
}

@mixin width-between($min, $max) {
  $min-value: map.get($breakpoints, $min);
  $max-value: map.get($breakpoints, $max);
  @if $min-value and $max-value {
    @media (min-width: $min-value) and (max-width: ($max-value - 1)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint range: #{$min} to #{$max}.";
  }
}

// Utility mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-2 $spacing-3;
  border-radius: $border-radius-md;
  font-size: $font-size-button;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s ease;
}

@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid $primary-green;
    outline-offset: 2px;
  }
} 